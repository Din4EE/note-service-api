syntax = "proto3";

package api.note_v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "envoyproxy/validate/validate.proto";

option go_package = "github.com/Din4EE/note-service-api/pkg/note_v1";

service NoteService {
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/v1/notes"
      body: "*"
    };
  }
  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/v1/notes/{id}"
    };
  }
  rpc GetList(GetListRequest) returns (GetListResponse){
    option (google.api.http) = {
      get: "/v1/notes"
    };
  }
  rpc Update(UpdateRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/v1/notes/{id}"
      body: "*"
    };
  }
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/v1/notes/{id}"
    };
  }
}

message NoteInfo {
  string title = 1 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  string text = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  string author = 3 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  string email = 4 [(validate.rules).string.email = true];
}

message UpdateNoteInfo {
  google.protobuf.StringValue title = 1 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  google.protobuf.StringValue text = 2 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  google.protobuf.StringValue author = 3 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
  google.protobuf.StringValue email = 4 [(validate.rules).string.email = true];
}

message Note {
  uint64 id = 1;
  NoteInfo info = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message CreateRequest {
  NoteInfo info = 1;
}

message CreateResponse {
  uint64 id = 1;
}

message GetRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message GetResponse {
  Note note = 1;
}

message GetListRequest {
  uint64 limit = 1;
  uint64 offset = 2;
  string search_query = 3 [(validate.rules).string.pattern = "^[a-zA-Z0-9_ ]*$"];
}

message GetListResponse {
  repeated Note notes = 1;
}

message UpdateRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  UpdateNoteInfo info = 2;
}

message DeleteRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}